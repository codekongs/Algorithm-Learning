/**
 * 题目描述
 * 我们可以用2*1的小矩形横着或者竖着去覆盖更大的矩形。
 * 请问用n个2*1的小矩形无重叠地覆盖一个2*n的大矩形，
 * 总共有多少种方法？
 *
 * 解题思路
 * -------------------------
 * |1 |3 |  |  |  |  |  |  |
 * -------------------------
 * |2 |4 |  |  |  |  |  |  |
 * -------------------------
 *
 * 如上图,是一个n = 8时的情形,这个大矩形是2*8 = 16的面积
 * 我们设定f(8)表示n = 8时的覆盖方法
 * 假设我们从最左边开始覆盖,我们有两种选择:
 * 选择一:用一个2*1的小矩形覆盖最左边一列(即图中1和2的位置),此时我们剩余2*7的大矩形,我们还有f(7)种覆盖方法
 * 选择二:用一个2*1的小矩形覆盖左上角的位置(即1和3的位置),此时我们必须使用另一个2*1的小矩形覆盖左下角的位置(即2和4的位置)
 *       只有这样才能继续使用2*1的小矩形完整覆盖大矩形,此时剩余2*6的大矩形,我们有f(6)种覆盖方法
 * 综上:f(8) = f(7) + f(6),该题是斐波那契数列的应用
 */
public class Solution {
    public int RectCover(int target) {
        if (target <= 0){
            return 0;
        }
        int one = 0;
        int two = 1;
        int fn = one + two;
        while (target-- > 0){
            fn = one + two;
            one = two;
            two = fn;
        }
        return fn;
    }

    public static void main(String[] args) {
        System.out.println(new Solution().RectCover(4));
    }
}